import { Button, VerticalBox, HorizontalBox, TextEdit, CheckBox, ComboBox} from "std-widgets.slint";
import {MultiChoice, ThreeStartScore, MainText, HiddenText, ScrollChoice} from "widgets.slint";
import {CatInfo, FullUpdate, Screen, FullInfo} from "structs.slint";
import { SelectLookUpScreen, LookUpScreen } from "screen-look-up.slint";
import { SelectMainPlayScreen } from "screen-select-main-play.slint";
import { MainPlayScreen } from "screen-main-play.slint";

export component AppWindow inherits Window {
    title: "Geo quiz";
    icon: @image-url("icon.svg");
    // width: 500px;
    // ***************************************************************** //
    //                            PROPERTIES
    // ***************************************************************** //
    in-out property <Screen> screen: Screen.Start;
    // for select look up 
    in property <[string]> search_all_countries : ["Jamaica"]; 
    in property <[bool]> search_countries_mask: [true];
    
    // ***************************************************************** //
    //                            CALLBACKS
    // ***************************************************************** //
    callback look_up_search_changed(search: string);
    callback look_up_selected(num: int);
    callback close();
    callback reset_score();
    callback save_score();
    callback prep_look_up();
    callback next(int);
    callback prev();
    callback start_play([int], bool, bool, int);

    // ***************************************************************** //
    //                            UI LOGIC
    // ***************************************************************** //
    function prep_start_play(play_mode:int, cat_choices:[int], order_normal:bool, hard:bool, im_choice:int) {
        main_play_s.play_mode = play_mode;
        root.start_play(
            cat_choices, 
            order_normal, 
            hard, 
            im_choice
        );
        root.screen = Screen.MainPlay;
    }

    public function back() {
        if root.screen == Screen.MainPlay {
            root.screen = Screen.SelectMainPlay;
        } else if root.screen == Screen.SelectMainPlay {
            root.screen = Screen.Start
        } else if root.screen == Screen.LookUp {
            root.screen = Screen.SelectLookUp;
        } else if root.screen == Screen.SelectLookUp {
            root.screen = Screen.Start;
        } else if root.screen == Screen.ChoicePlay {
            root.screen = Screen.SelectChoicePlay;
        } else if root.screen == Screen.SelectChoicePlay {
            root.screen = Screen.Start
        }
        

    }

    public function update_look_up_selected(infos: FullInfo) {
        w_look_up.infos = infos;
        w_look_up.reset();
        root.focus();
        root.screen = Screen.LookUp
    }

    public function update_screen(info: FullUpdate, cat: [CatInfo]) {
        main_play_s.update_screen(info, cat);
    }

    forward-focus: my-key-handler;
    my-key-handler := FocusScope {
        key-pressed(event) => {
            if event.text == Key.Escape && !event.repeat {
                root.close();
            } 
            if event.text == Key.Space && !event.repeat {
                main_play_s.info_level += 1;
            }
            if event.text == "b" {
                back();
            }
            if root.screen == Screen.MainPlay {
                if event.text == Key.LeftArrow {
                    root.prev();
                } else if event.text == Key.RightArrow {
                    next(0);
                }
            }
            accept
        }
    }
    // ***************************************************************** //
    //                            BACK BUTTON
    // ***************************************************************** //
    TouchArea {
        visible: root.screen != Screen.Start;
        x: 10px;
        y: 10px;
        width: 40px;
        height: 40px;
        Image {
            source: @image-url("settings.svg");
            height: 40px;
        }

        clicked => {
            back();
        }
    }
    // ***************************************************************** //
    //                            Start Screen
    // ***************************************************************** //
    Rectangle {
        visible: root.screen == Screen.Start;
        VerticalLayout {
            spacing: 10px;
            padding: 20px;
            // padding-left : root.width/10;
            MainText {
                text: "Geo Quiz";
                font-size: 20pt;
                horizontal-alignment: center;
                vertical-alignment: center;
            }
            Rectangle {}
            Button{
                height: root.height/6;
                text: "Free Play";
                clicked => {root.screen = Screen.SelectMainPlay}
            }
            Button{
                height: root.height/6;
                text: "Choices Play";
                clicked => {root.screen = Screen.SelectChoicePlay}
            }
            Button {
                height: root.height/6;
                text: "Look Up Infos";
                clicked => {root.screen = Screen.SelectLookUp}
            }
            Button {
                height: root.height/6;
                text: "Reset Score";
                clicked => {reset_score()}
            }
            Rectangle {}
        }
        
    }
    // ***************************************************************** //
    //                            LOOK UP SCREEN
    // ***************************************************************** //
    w_sel_look_up := SelectLookUpScreen {
        visible: root.screen == Screen.SelectLookUp;
        all: root.search_all_countries;
        on: root.search_countries_mask;
        search_changed(search) => {
            look_up_search_changed(search)
        }
        selected(num) => {
            look_up_selected(num) 
        }
    }

    w_look_up := LookUpScreen {
        visible: root.screen == Screen.LookUp;
    }
    
    sel_main_play_s := SelectMainPlayScreen {
        visible: root.screen == Screen.SelectMainPlay;
        play(play-mode, cat-choices, order-normal, hard, im-choice) => {prep_start_play(play-mode, cat-choices, order-normal, hard, im-choice)}
    }

    main_play_s := MainPlayScreen {
        visible: root.screen == Screen.MainPlay;
        next(score) => {next(score)}
        prev() => {prev()}
    }
}
