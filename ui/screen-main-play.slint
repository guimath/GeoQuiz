import { HorizontalBox, VerticalBox } from "std-widgets.slint";
import { CatInfo, MainPlayUpdate, TxtOrImg } from "structs.slint";
import { FiveStarScore, TitleText, HiddenText, SwipeInfo } from "widgets.slint";
import { TextStyle, FontSettings, Palette, Sizes } from "styling.slint";

export component MainPlayScreen inherits Rectangle {
    callback prev();
    callback next(score: int);
    in-out property <int> play_mode: 1;
    in-out property <int> num:0;
    in-out property <int> out_of:110;
    property <int> score_delayed: 0;
    property <TxtOrImg> info: {
        is_txt: false,
        txt: "Jamaica",
        img: @image-url("../data/flags/jam.svg"),
    };
    public function update_screen(info: MainPlayUpdate, cat: [CatInfo]) {
        w_score.score = info.score;
        w_score.prev_score = info.last-score;
        w_cat1.update_cat(cat[0], info.seen);
        w_cat2.update_cat(cat[1], info.seen);
        w_cat3.update_cat(cat[2], info.seen);
        root.num = info.num;
        root.out_of = info.out_of;
        root.info = info.info;
    }

    function prep_next(score: int) {
        if score == 0 {
            root.next(score);
        } else {
            // w_score.score = score;
            root.score_delayed = score;
            w_cat1.show = true;
            w_cat2.show = true;
            w_cat3.show = true;
            timer.running = true;
        }
    }
    timer := Timer {
        interval: Sizes.time_delay;
        running: false;
        triggered() => {
            self.running = false;
            root.next(root.score_delayed);
        }
    }

    VerticalLayout {
        padding: Sizes.padding;
        spacing: Sizes.spacing;

        TitleText {
            text: "\{root.num + 1} / \{root.out_of}";
        }

        SwipeInfo {
            info : root.info;
            handle-swipe-right: root.num > 0;
            handle-swipe-left: root.num < root.out_of - 1;
            height: root.width / 16*9;
            prev => {prev()}
            next => {next(0)}
        }

        HorizontalBox {
            padding-top: Sizes.spacing;
            padding-bottom: Sizes.spacing;
            alignment: center;
            w_score := FiveStarScore {  
                score_changed(score) => {
                    prep_next(score)
                }
            }
        }

        w_cat1 := HiddenText {
            play_mode: root.play_mode;
            type: "Country";
            name: "Jamaica";
            first_letter: "J";
        }

        w_cat2 := HiddenText {
            play_mode: root.play_mode;
            type: "Capital";
            name: "Kingston";
            first_letter: "K";
        }

        w_cat3 := HiddenText {
            play_mode: root.play_mode;
            type: "Language";
            name: "English, Jamaican Patois";
            first_letter: "E..., J...";
        }

        Rectangle { } // spacing
    }
}
