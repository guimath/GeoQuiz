import { Button, VerticalBox, HorizontalBox } from "std-widgets.slint";
import { MultiChoice, RegularText, TitleText, ScrollChoice, TextButton } from "widgets.slint";
import { TextStyle, FontSettings, Palette, Sizes } from "styling.slint";

export component SelectMainPlayScreen inherits Rectangle {
    callback play(cat_choices:[int], im_choice:int, play_mode:int);
    public function invoke_play() {
        play(
            [cat1.choice_num, cat2.choice_num, cat3.choice_num], 
            cat_im.choice_num,
            w_play_mode.choice_num,
        );
    }
    in property <[string]> info_type_names: ["Flag", "Outline", "Country", "Capital", "Languages", "Borders", "Region", "Currencies"];
    in property <[string]> guess_type_names: ["Country", "Capital", "Languages", "Borders", "Region", "Currencies"];
    property <bool> custom : false;
    VerticalBox {
        padding: Sizes.padding;
        TitleText{
            text: "Free Play";
        }
        Rectangle {}
        
        Rectangle {
            background: Palette.accent1;
            border-radius: Sizes.std_radius;
            VerticalBox {
                padding: Sizes.spacing;
                spacing: Sizes.spacing;
                RegularText {
                    text: "Difficulty";
                    horizontal-alignment: center;
                }

                w_play_mode := MultiChoice {
                    choices: ["Learn", "Easy", "Medium", "Hard"];
                    choice_num: 2;
                }
                RegularText {
                    text: w_play_mode.choice_num == 0 ? "All info is shown":
                        w_play_mode.choice_num == 1 ? "All hints are shown": 
                        w_play_mode.choice_num == 2 ? "Hints are available":
                        "No hints";
                    horizontal-alignment: center;
                    style: FontSettings.body-small;
                }
            }
        }
    

        Rectangle {
            width: 100%;
            height: 2px;
            background: white;
        } 

        TitleText {
            text: "Playing Categories";
            style: FontSettings.title-small;
        }
        Rectangle {
            HorizontalBox {
                visible: !root.custom;
                alignment: center;
                padding: 0;
                TextButton {
                    height: root.height/10;
                    width: root.width / 4;
                    text: "Flags";
                    clicked => {
                        play(
                            [0, 1, 2], 
                            0,
                            w_play_mode.choice_num
                        );
                    }
                }
    
                TextButton {
                    height: root.height/10;
                    width: root.width / 4;
                    text: "Outlines";
                    clicked => {
                        play(
                            [0, 1, 5], 
                            1,
                            w_play_mode.choice_num
                        );
                    }
                }
                TextButton {
                    height: root.height/10;
                    width: root.width / 4;
                    text: "Custom";
                    clicked => {
                        root.custom = true;
                    }
                }
            }

            VerticalBox {
                padding: 0;
                visible: root.custom;
                HorizontalBox {
                    alignment: center;
                    padding: 0;
                    TextButton {
                        height: root.height/10;
                        width: root.width / 3;
                        text: "Back to default";
                        clicked => {
                            root.custom = false;
                        }
                    }
        
                    TextButton {
                        height: root.height/10;
                        width: root.width / 3;
                        text: "Play";
                        clicked => {
                            invoke_play()
                        }
                    }
                }
                
                VerticalBox {
                    padding: 0;
                    
                    RegularText {
                        text: "Info shown";
                        width:  100%;
                        horizontal-alignment: center;
                    }
                    cat_im := ScrollChoice {
                        choices: root.info_type_names;
                        width:  100%;
                    }
                    RegularText {
                        text: "Info to guess";
                        width:  100%;
                        horizontal-alignment: center;
                    }
    
                    VerticalLayout {
                        padding: 0;
                        spacing: 2*Sizes.spacing - Sizes.size_bar;
                        cat1 := ScrollChoice {
                            width: 100%;
                            choices: root.guess_type_names;
                        }
    
                        cat2 := ScrollChoice {
                            width: 100%;
                            choices: root.guess_type_names;
                            choice_num: 1;
                        }
    
                        cat3 := ScrollChoice {
                            width: 100%;
                            choices: root.guess_type_names;
                            choice_num: 2;
                        }
                    }
                }
            }        
        }
        Rectangle {}
    }
}