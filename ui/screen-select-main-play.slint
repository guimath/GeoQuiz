import { Button, VerticalBox, HorizontalBox } from "std-widgets.slint";
import { MultiChoice, RegularText, TitleText, ScrollChoice } from "widgets.slint";

export component SelectMainPlayScreen inherits Rectangle {
    callback play(cat_choices:[int], im_choice:int);
    public function invoke_play() {
        play(
            [cat1.choice_num, cat2.choice_num, cat3.choice_num], 
            cat_im.choice_num
        );
    }
    in property <[string]> info_type_names: ["Flag", "Outline", "Country", "Capital", "Languages", "Borders", "Region", "Currencies"];
    in property <[string]> guess_type_names: ["Country", "Capital", "Languages", "Borders", "Region", "Currencies"];
    property <bool> custom : false;
    padding: 0;
    VerticalBox {
        // HorizontalBox {
        //     alignment: center;
        //     padding: 20pt;
        //     Button {
        //         height: 70pt;
        //         width: root.width / 4;
        //         text: "Play";
        //         clicked => {invoke_play()}
        //     }
        // }
        TitleText{
            text: "Free Play";
        }
        
        Rectangle {
            background: #4a4458ff;
            border-radius: 10px;
            VerticalBox {
                padding: 10px;
                RegularText {
                    text: "Difficulty";
                    horizontal-alignment: center;
                }

                w_play_mode := MultiChoice {
                    choices: ["No hints", "Clickable hints", "Always on hints", "Full info"];
                    choices_len: 4;
                    choice_num: 1;
                    spacing: 10pt;
                }
            }
        }
    

        // Rectangle {
        //     width: 100%;
        //     height: 2px;
        //     background: white;
        // }

        TitleText {
            text: "Playing Categories";
            horizontal-alignment: center;
            vertical-alignment: center;
            font-size: 16pt;
        }
        Rectangle {
            HorizontalBox {
                visible: !root.custom;
                alignment: center;
                padding: 0;
                Button {
                    height: 40pt;
                    width: root.width / 4;
                    text: "Flags";
                    clicked => {
                        play(
                            [0, 1, 2], 
                            0
                        );
                    }
                }
    
                Button {
                    height: 40pt;
                    width: root.width / 4;
                    text: "Outlines";
                    clicked => {
                        play(
                            [4, 3, 0], 
                            1
                        );
                    }
                }
                Button {
                    height: 40pt;
                    width: root.width / 4;
                    text: "Custom";
                    clicked => {
                        root.custom = true;
                    }
                }
            }

            VerticalBox {
                padding: 0;
                visible: root.custom;
                HorizontalBox {
                    alignment: center;
                    padding: 0;
                    Button {
                        height: 40pt;
                        width: root.width / 3;
                        text: "Back to default";
                        clicked => {
                            root.custom = false;
                        }
                    }
        
                    Button {
                        height: 40pt;
                        width: root.width / 3;
                        text: "Play";
                        clicked => {
                            invoke_play()
                        }
                    }
                }
                HorizontalBox {
                    alignment: center;
                    padding: 0pt;
        
                    VerticalBox {
                        height: 30pt * 4 + 20px * 3;
                        padding: 0pt;
                        
                        RegularText {
                            text: "What is shown";
                            width:  100%;
                            horizontal-alignment: center;
                        }
                        cat_im := ScrollChoice {
                            width: 100%;
                            choices: root.info_type_names;
                            width_per_elem: root.width/5;
                            spacing: 5pt;
                        }
                        RegularText {
                            text: "What you need to guess";
                            width:  100%;
                            horizontal-alignment: center;
                        }
        
                        Rectangle {
        
                            cat1 := ScrollChoice {
                                y: 0;
                                width: 100%;
                                choices: root.guess_type_names;
                                width_per_elem: root.width/5;
                                spacing: 5pt;
                            }
        
                            cat2 := ScrollChoice {
                                y: 30pt + 20px;
                                width: 100%;
                                choices: root.guess_type_names;
                                width_per_elem: root.width/5;
                                choice_num: 1;
                                spacing: 5pt;
                            }
        
                            cat3 := ScrollChoice {
                                y: 2 * 30pt + 2 * 20px;
                                width: 100%;
        
                                choices: root.guess_type_names;
                                width_per_elem: root.width/5;
                                choice_num: 2;
                                spacing: 5pt;
                            }
                        }
                    }
                }
            }        
        }
        Rectangle {
            vertical-stretch: 1;
        }
    }
}