import { Button, VerticalBox, HorizontalBox } from "std-widgets.slint";
import { MultiChoice, RegularText, TitleText, ScrollChoice } from "widgets.slint";

export component SelectMainPlayScreen inherits Rectangle {
    callback play(play_mode:int, cat_choices:[int], order_normal:bool, hard:bool, im_choice:int);
    public function invoke_play() {
        play(
            w_play_mode.choice_num,
            [cat1.choice_num, cat2.choice_num, cat3.choice_num], 
            w_order.not_default, 
            w_hard.not_default, 
            cat_im.choice_num
        );
    }
    in property <[string]> info_types: ["Country", "Capital", "Languages", "Borders", "Region", "Currencies"];
    property <bool> custom : false;
    padding: 0;
    VerticalBox {
        // HorizontalBox {
        //     alignment: center;
        //     padding: 20pt;
        //     Button {
        //         height: 70pt;
        //         width: root.width / 4;
        //         text: "Play";
        //         clicked => {invoke_play()}
        //     }
        // }
        TitleText{
            text: "Free Play";
        }
        
        Rectangle {
            background: #4a4458ff;
            border-radius: 10px;
            VerticalBox {
                padding: 10px;
                RegularText {
                    text: "Difficulty";
                    horizontal-alignment: center;
                }

                w_play_mode := MultiChoice {
                    choices: ["No hints", "Clickable hints", "Always on hints", "Full info"];
                    choices_len: 4;
                    choice_num: 1;
                    spacing: 10pt;
                }
            }
        }

        Rectangle {
            background: #4a4458ff;
            border-radius: 10px;
            HorizontalBox {
                padding: 10px;
                RegularText {
                    text: "Country list includes:";
                    vertical-alignment: center;
                    horizontal-alignment: right;
                    wrap: word-wrap;
                }

                w_hard := MultiChoice {
                    width: 70%;
                    choices: ["Independent countries only", "All territories"];
                    choices_len: 2;
                    width_per_elem: 40%;
                    spacing: 20pt;
                }
            }
        }

        Rectangle {
            width: 60%;
            background: #4a4458ff;
            border-radius: 10px;
            HorizontalBox {
                padding: 10px;
                RegularText {
                    text: "Start with:";
                    horizontal-alignment: right;
                    vertical-alignment: center;
                    wrap: word-wrap;
                }

                w_order := MultiChoice {
                    width: 70%;
                    choices: ["Lesser known countries", "Better known countries"];
                    choices_len: 2;
                    width_per_elem: 40%;
                    spacing: 20pt;
                }
            }
        }

        Rectangle {
            width: 100%;
            height: 2px;
            background: white;
        }

        TitleText {
            text: "Playing Categories";
            horizontal-alignment: center;
            vertical-alignment: center;
            font-size: 16pt;
        }
        Rectangle {
            HorizontalBox {
                visible: !root.custom;
                alignment: center;
                padding: 0;
                Button {
                    height: 40pt;
                    width: root.width / 4;
                    text: "Flags";
                    clicked => {
                        play(
                            w_play_mode.choice_num,
                            [0, 1, 2], 
                            w_order.not_default, 
                            w_hard.not_default, 
                            0
                        );
                    }
                }
    
                Button {
                    height: 40pt;
                    width: root.width / 4;
                    text: "Outlines";
                    clicked => {
                        play(
                            w_play_mode.choice_num,
                            [4, 3, 0], 
                            w_order.not_default, 
                            w_hard.not_default, 
                            1
                        );
                    }
                }
                Button {
                    height: 40pt;
                    width: root.width / 4;
                    text: "Custom";
                    clicked => {
                        root.custom = true;
                    }
                }
            }

            VerticalBox {
                padding: 0;
                visible: root.custom;
                HorizontalBox {
                    alignment: center;
                    padding: 0;
                    Button {
                        height: 40pt;
                        width: root.width / 3;
                        text: "Back to default";
                        clicked => {
                            root.custom = false;
                        }
                    }
        
                    Button {
                        height: 40pt;
                        width: root.width / 3;
                        text: "Play";
                        clicked => {
                            invoke_play()
                        }
                    }
                }
                HorizontalBox {
                    alignment: center;
                    padding: 0pt;
        
                    VerticalBox {
                        height: 30pt * 4 + 20px * 3;
                        padding: 0pt;
                        cat_im := MultiChoice {
                            width: 100%;
                            choices: ["Flags", "Outlines"];
                            choices_len: 2;
                            width_per_elem: 30%;
                            spacing: 20px;
                        }
        
                        Rectangle {
        
                            cat1 := ScrollChoice {
                                y: 0;
                                width: 100%;
                                choices: root.info_types;
                                width_per_elem: root.width/5;
                                spacing: 5pt;
                            }
        
                            cat2 := ScrollChoice {
                                y: 30pt + 20px;
                                width: 100%;
                                choices: root.info_types;
                                width_per_elem: root.width/5;
                                choice_num: 1;
                                spacing: 5pt;
                            }
        
                            cat3 := ScrollChoice {
                                y: 2 * 30pt + 2 * 20px;
                                width: 100%;
        
                                choices: root.info_types;
                                width_per_elem: root.width/5;
                                choice_num: 2;
                                spacing: 5pt;
                            }
                        }
                    }
                }
            }        
        }
        Rectangle {
            vertical-stretch: 1;
        }
    }
}